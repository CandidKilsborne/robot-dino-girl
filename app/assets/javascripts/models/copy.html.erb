<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
    <title>Phaser - Making your first game, part 9</title>
    <style type="text/css">
        body {
            margin: 0;
        }
    </style>
</head>
<body>

<script type="text/javascript">
var game = new Phaser.Game(1000, 600, Phaser.AUTO, 'phaser-example', { preload: preload, create: create, update: update, render: render });


function preload() {

    game.load.image('tiles', 'assets/techblocks2_2.png');
    game.load.tilemap('map', 'assets/csv_map.csv', null, Phaser.Tilemap.CSV);
    game.load.image('sky', 'assets/space.jpg');
    game.load.spritesheet('dude', 'assets/dude.png', 32, 48);
}
var player
var map;
var layer;
var cursors;

function create() {

    game.add.sprite(0, 0, 'sky');
    //  Because we're loading CSV map data we have to specify the tile size here or we can't render it
    map = game.add.tilemap('map', 30, 30);
    map.setCollisionBetween(0,32)
    map.enableBody = true;
    //  Add a name for your tileset image, the image its look at, the width, height, margin, and spacing

    // ------
    map.addTilesetImage('TileImage', 'tiles', 31, 31);
    game.physics.arcade.enable(map);

    player = game.add.sprite(32, game.world.height - 300, 'dude');
    game.physics.arcade.enable(player);
    player.animations.add('left', [0, 1, 2, 3], 10, true);
    player.animations.add('right', [5, 6, 7, 8], 10, true);
    player.body.bounce.y = 0.2;
    player.body.gravity.y = 300;
    player.body.linearDamping = 1;
    player.body.collideWorldBounds = true;

    //  Create our layer
    layer = map.createLayer(0);
    layer.enableBody = true;
    game.physics.arcade.enable(layer);

    //  Resize the world
    layer.resizeWorld();

    //  Allow cursors to scroll around the map
    cursors = game.input.keyboard.createCursorKeys();

    var help = game.add.text(16, 16, 'Arrows to scroll', { font: '14px Arial', fill: '#ffffff' });
    help.fixedToCamera = true;

}


function update() {
        game.physics.arcade.collide(player, layer);
        game.physics.arcade.collide(player, map);

    //  Checks to see if the player overlaps with any of the stars, if he does call the collectStar function

    //  Reset the players velocity (movement)
    player.body.velocity.x = 0;

    if (cursors.left.isDown)
    {
        //  Move to the left
        player.body.velocity.x = -150;

        player.animations.play('left');
    }
    else if (cursors.right.isDown)
    {
        //  Move to the right
        player.body.velocity.x = 150;

        player.animations.play('right');
    }
    else
    {
        //  Stand still
        player.animations.stop();

        player.frame = 4;
    }

    //  Allow the player to jump if they are touching the ground.
    if (cursors.up.isDown && player.body.down)
    {
        player.body.velocity.y = -350;
    }

    if (cursors.up.isDown && player.body.touching.map)
    {
        player.body.velocity.y = -350;
    }
    // MUST BE PLAYER BLOCK, NOT TOUCHING for jump.
    if (cursors.up.isDown && player.body.touching.down)
    {
        player.body.velocity.y = -350;
    }
}

function render() {

}

</script>

</body>
</html>

